"""
Este m√≥dulo centraliza todos os textos, mensagens e prompts usados pela assistente Sofia.
Isso facilita a manuten√ß√£o, tradu√ß√£o e consist√™ncia da comunica√ß√£o.
"""

from datetime import datetime
from functools import lru_cache
from typing import Any
from sqlalchemy.orm import Session

from database.fragments import (
    gerar_fragmento_empresa,
    gerar_fragmento_setores,
    gerar_fragmento_funcionarios,
    gerar_fragmento_gerentes,
    gerar_fragmento_persona,
    gerar_fragmento_conhecimentos,
    gerar_fragmento_cerimonias,
    gerar_fragmento_projetos,
    gerar_fragmento_participacoes
)


# Mensagens Gerais e de Intera√ß√£o 
GREETING_DEFAULT = "Ol√°! Eu sou a Sofia. Como posso te ajudar hoje? üòä"
GREETING_WELLBEING = "Ol√°! Tudo √≥timo por aqui. E com voc√™? Espero que esteja tudo bem! No que posso ser √∫til?"
COURTESY_RESPONSE = "De nada! Se precisar de mais alguma coisa, √© s√≥ chamar. üòâ"
OPENAI_FALLBACK_MESSAGE = "Pe√ßo desculpas, mas n√£o consegui processar sua pergunta no momento. Poderia tentar reformul√°-la?"
IMAGE_ERROR_MESSAGE = "Desculpe, ocorreu um erro ao tentar analisar a imagem. Por favor, verifique o arquivo e tente novamente."

# Mensagens do M√≥dulo Boards
BOARDS_SELECTION_MESSAGE = "Claro! Qual board voc√™ gostaria de analisar? As op√ß√µes s√£o **Sonar** ou **Sonar Labs**."
BOARDS_HELP_MESSAGE = """
Aqui est√£o alguns exemplos do que voc√™ pode me perguntar sobre os boards:

- "qual a vis√£o geral do board sonar?"
- "quais as tarefas em andamento do sonar labs?"
- "liste as tarefas do fulano no board sonar"
- "quem √© o cliente com mais atividades no sonar?"
- "quantas bugs temos no board sonar labs?"

Lembre-se de especificar o board na primeira pergunta. Depois, posso manter o contexto para as pr√≥ximas. Para sair, diga "sair do modo boards".
"""
BOARDS_EXIT_MESSAGE = "Tudo bem! Saindo do modo de an√°lise de boards. Se precisar de algo mais, estou √† disposi√ß√£o."

# Mensagens do M√≥dulo de Arquivos (SharePoint) 
SHAREPOINT_CONFIG_ERROR = "‚ö†Ô∏è **Erro de Configura√ß√£o:** N√£o foi poss√≠vel autenticar no SharePoint. Verifique as credenciais no arquivo de configura√ß√£o."
SHAREPOINT_DRIVE_ERROR = "‚ö†Ô∏è **Erro de Acesso:** Autenticado com sucesso, mas n√£o foi poss√≠vel encontrar o Drive de destino no SharePoint. Verifique o nome do Drive configurado."
NO_FILES_MESSAGE = "N√£o encontrei nenhum arquivo recente no SharePoint."
FILE_NOT_FOUND_MESSAGE = "N√£o consegui encontrar um arquivo com esse nome. Que tal tentar listar os arquivos recentes para ver se ele aparece?"
FILE_SEARCH_NO_RESULTS = "Busquei por '**{}**', mas n√£o encontrei nenhum arquivo correspondente. üòî"
FILE_FOUND_MESSAGE = "Encontrei o seguinte arquivo para voc√™:\n\n"
FILE_CONTENT_ANALYSIS_OFFER = "Gostaria que eu lesse o conte√∫do deste arquivo para voc√™? Posso fazer um resumo ou responder perguntas sobre ele."

# Instru√ß√µes para o Usu√°rio 
FILE_LIST_INSTRUCTIONS = "Voc√™ pode clicar em qualquer arquivo para abri-lo. Se quiser que eu analise o conte√∫do de algum deles, √© s√≥ pedir!"
SINGLE_FILE_CLICK_INSTRUCTION = "Voc√™ pode clicar no nome do arquivo para abri-lo."
MULTIPLE_FILES_CLICK_INSTRUCTION = "Voc√™ pode clicar em qualquer um dos nomes para abrir o arquivo correspondente."

# Mensagens do M√≥dulo de Aprendizado 
LEARNING_ERROR_MESSAGE = "N√£o entendi. Se voc√™ quer me ensinar algo, comece sua frase com 'quero te ensinar' ou 'aprenda'."
LEARNING_QUESTION_PROMPT = "Entendido. Qual √© a resposta para essa pergunta?"
LEARNING_ERROR_RETRY = "Algo deu errado no processo de aprendizado. Por favor, tente novamente."

# Mensagens de Comandos Administrativos e Diagn√≥stico
ADMIN_COMMAND_NOT_RECOGNIZED = "Comando administrativo n√£o reconhecido."
DIAGNOSTIC_HEADER = "--- ü©∫ **Relat√≥rio de Diagn√≥stico da Sofia** ---"
DIAGNOSTIC_CONFIG_SECTION = "\n**1. Verifica√ß√£o de Configura√ß√£o:**"
DIAGNOSTIC_CONNECTIVITY_SECTION = "\n**2. Teste de Conectividade com SharePoint:**"
DIAGNOSTIC_ENDPOINTS_SECTION = "\n**3. Verifica√ß√£o de Endpoints do Microsoft Graph:**"

# Mensagens de Erro
ERROR_400_MESSAGE = "Ocorreu um erro na sua solicita√ß√£o (Erro 400 - Bad Request). Verifique se os par√¢metros est√£o corretos."
ERROR_401_MESSAGE = "Acesso n√£o autorizado (Erro 401 - Unauthorized). Minhas credenciais para este servi√ßo podem ter expirado. Avise o time t√©cnico!"
ERROR_TECHNICAL_MESSAGE = "Ocorreu um erro t√©cnico inesperado. A equipe de desenvolvimento j√° foi notificada. Por favor, tente novamente mais tarde."


# Gera√ß√£o do Prompt de Sistema para a OpenAI

@lru_cache(maxsize=32)
def gerar_system_prompt(db: Any = None, historico_conversa: str = "", tom: str = "neutro") -> str:
    """
    Monta o prompt de sistema dinamicamente. No futuro, usar√° o banco de dados
    para definir a persona, contexto e o tom da resposta da IA.
    """
    fragmentos = []

    if db:
        fragmentos = [
            gerar_fragmento_persona(db),
            gerar_fragmento_empresa(db),
            gerar_fragmento_setores(db),
            gerar_fragmento_funcionarios(db),
            gerar_fragmento_gerentes(db),
            gerar_fragmento_projetos(db),
            gerar_fragmento_participacoes(db),
            gerar_fragmento_conhecimentos(db),
            gerar_fragmento_cerimonias(db),
        ]
    else:
        
        fragmentos.append("Voc√™ √© Sofia, uma assistente de IA da Sonar. Voc√™ √© prestativa, eficiente e se comunica de forma clara e amig√°vel.")

    data_hoje = datetime.now().strftime("%d de %B de %Y")
    fragmentos.append(
        f"A data de hoje √© {data_hoje}. Use essa informa√ß√£o para responder perguntas como 'qual √© o dia de hoje?'."
    )

    if tom == "animado":
        fragmentos.append(
            "Adote um tom leve, simp√°tico, entusiasmado e espont√¢neo. Use emoticons para deixar a intera√ß√£o mais agrad√°vel. üòä"
        )
    elif tom == "s√©rio":
        fragmentos.append(
            "Adote um tom mais formal, direto e profissional, mantendo cordialidade e clareza."
        )

    if historico_conversa:
        fragmentos.append("\n--- Hist√≥rico da Conversa Recente ---\n" + historico_conversa)

    return "\n\n".join(p for p in fragmentos if p and p.strip())